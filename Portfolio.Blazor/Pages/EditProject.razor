@page "/projectentry/edit/{ProjectId:int}"
@inject Portfolio.Blazor.ProjectApiService ApiService
@inject NavigationManager navManager
@using Portfolio.Shared
@using Portfolio.Shared.ViewModels
<h3>EditProject</h3>

<label>Project Title:</label>
<br />
<input type="text" @bind="Title">
<br />
<br />

<label>Project Requirementes:</label>
<br />
<input type="text" @bind="Requirementes">
<br />

<label>Project Design:</label>
<br />
<input type="text" @bind="@Desgin" />
<br />

<label>Project CompletionDate: </label>
<br />
<input typp="date" @bind="CompletionDate">
<br />

@*TODO On saving with the language we need to save the lannguage to the database for language, the project to project and create
    the association between the two in the projectLanguage*@
<label>Language:</label>
<input type="text" @bind="langaugeName">
<button @onclick="AddLanguage">Add Language</button>

<button @onclick="SaveChanges">Update</button>

@code {
    [Parameter]
    public int ProjectId { get; set; }

    public ProjectViewModel CurrentProject { get; set; }
    public string Title { get; set; }
    public string Requirementes { get; set; }
    public string Desgin { get; set; }
    public DateTime CompletionDate { get; set; }
    private IEnumerable<LanguageViewModel> Languages { get; set; }

    private string langaugeName = " ";

    protected override async Task OnInitializedAsync()
    {
        await RefreshProjectsAsync();
    }

    private async Task AddLanguage()
    {
        await ApiService.AssignLanguage(ProjectId, langaugeName);
        await RefreshProjectsAsync();
    }

    public async Task SaveChanges()
    {
        CurrentProject.Title = Title;
        CurrentProject.Requirements = Requirementes;
        CurrentProject.Design = Desgin;
        CurrentProject.CompletionDate = CompletionDate;

        await ApiService.Edit(CurrentProject);
        navManager.NavigateTo("https://delbert93.github.io/Portfolio/projectentry");
    }

    private async Task RefreshProjectsAsync()
    {
        CurrentProject = await ApiService.GetProjectById(ProjectId);
        Title = CurrentProject.Title;
        Requirementes = CurrentProject.Requirements;
        Desgin = CurrentProject.Design;
        CompletionDate = CurrentProject.CompletionDate;
        Languages = CurrentProject.Languages;
    }

}
